// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator clinent {
  provider = "prisma-client-js"
}

model User {
  Id             BigInt         @id @default(autoincrement()) @db.BigInt
  CreatedAt      DateTime       @default(now())
  UpdatedAt      DateTime?      @updatedAt
  UserName       String         @unique
  Email          String?        @unique
  Name           String?
  Surname        String?
  PodUserId      Int            @unique
  PodContactId   Int?
  ProfileImage   String?
  PhoneNumber    String?        @db.VarChar(32)
  LocalToken     String?        @unique
  TokenExpiresAt DateTime?
  RefreshToken   String?
  Role           String         @default("user")
  SSOProfile     Json
  Tokens         Json
  UserTargets    UserTargets[]
  Transactions   Transactions[]
}

model TargetDefinitions {
  Id          BigInt    @id @default(autoincrement()) @db.BigInt
  CreatedAt   DateTime  @default(now())
  UpdatedAt   DateTime? @updatedAt
  Type        Int
  AnswerCount Int
  GoldenCount Int       @default(0)
  DatasetId   BigInt    @db.BigInt
  Dataset     Datasets  @relation(fields: [DatasetId], references: [Id])
  T           Float     @db.DoublePrecision
  UMin        Float     @db.DoublePrecision
  UMax        Float     @db.DoublePrecision
  BonusFalse  Float     @default(0) @db.DoublePrecision
  BonusTrue   Float     @default(0) @db.DoublePrecision

  UserTargets UserTargets[]
}

model UserTargets {
  Id                 String            @id @default(uuid())
  CreatedAt          DateTime          @default(now())
  UpdatedAt          DateTime          @updatedAt
  TargetDefinitionId BigInt            @db.BigInt
  TargetDefinition   TargetDefinitions @relation(fields: [TargetDefinitionId], references: [Id])
  OwnerId            BigInt            @db.BigInt
  Owner              User              @relation(fields: [OwnerId], references: [Id])
}

model Datasets {
  Id                       BigInt              @id @default(autoincrement()) @db.BigInt
  CreatedAt                DateTime            @default(now())
  UpdatedAt                DateTime?           @updatedAt
  Name                     String?
  Description              String?
  Type                     Int
  UMin                     Float               @db.DoublePrecision
  T                        Float               @db.DoublePrecision
  UMax                     Float               @db.DoublePrecision
  LabelingStatus           Int
  AnswerType               Int                 @default(0)
  FieldName                String?             @db.VarChar(255)
  IsActive                 Boolean             @default(false)
  QuestionType             Int                 @default(0)
  QuestionSrc              String?
  QuestionTemplate         String?
  ItemSourcePath           String?
  ProcessedItemsSourcePath String?
  AnswerBudgetCountPerUser Int                 @default(0)
  CorrectGoldenAnswerIndex Int                 @default(0)
  AnswerReplicationCount   Int                 @default(0)
  TotalBudget              Decimal             @default(0.0) @db.Decimal(18, 2)
  TargetDefinitions        TargetDefinitions[]
  DatasetItems             DatasetItems[]
  Labels                   Labels[]
  //AnswerLogs               AnswerLogs[]
  AnswerOption             AnswerOptions?
  Transactions             Transactions[]
}

model DatasetItems {
  Id                  String              @id @default(uuid())
  CreatedAt           DateTime            @default(now())
  UpdatedAt           DateTime?           @updatedAt
  Name                String
  Content             String?
  Type                Int
  FileExtension       String              @db.VarChar(30)
  FileName            String
  FilePath            String
  FileSize            Int
  LabelId             String?
  FinalLabelId        String?
  DatasetItemLabels   DatasetItemLabels[]
  IsGoldenData        Boolean
  DatasetId           BigInt              @db.BigInt
  Dataset             Datasets            @relation(fields: [DatasetId], references: [Id])
  ConfirmedGoldenData Boolean?
  OriginFolderName    String?
  //AnswerLogs        AnswerLogs[]
  Labels              Labels[]
}

model Labels {
  Id                String              @id @default(uuid()) @unique
  CreatedAt         DateTime            @default(now())
  UpdatedAt         DateTime?           @updatedAt
  Name              String
  DatasetId         BigInt              @db.BigInt
  Dataset           Datasets            @relation(fields: [DatasetId], references: [Id])
  DatasetItemId     String?
  DatasetItem       DatasetItems?       @relation(fields: [DatasetItemId], references: [Id])
  DatasetItemLabels DatasetItemLabels[]
}

model DatasetItemLabels {
  Id            String       @id @default(uuid())
  LabelId       String
  Label         Labels       @relation(fields: [LabelId], references: [Id])
  DatasetItemId String
  DatasetItem   DatasetItems @relation(fields: [DatasetItemId], references: [Id])
}

//model AnswerLogs {
//  Id             Int     @id @default(autoincrement())
//  Ignored        Boolean
//  IgnoreReason   String
//  Answer         String
//  QuestionObject Json
//
//  DatasetId                 Int
//  Dataset                   Datasets     @relation(fields: [datasetsId], references: [Id])
//  DatasetItemId             Int
//  DatasetItem               DatasetItems @relation(fields: [datasetItemsId], references: [Id])
//  DeterminedLabelId         Int
//  DeterminedLabel           Labels       @relation(fields: [DeterminedLabelId], references: [Id])
//  DurationToAnswerInSeconds Int          @default(0)
//  DatasetId                BigInt             @db.BigInt
//  DatasetItemsId            Int
//  labelsId                  Int
//}
model AnswerOptions {
  Id    BigInt  @id @default(autoincrement()) @db.BigInt
  Type  Int
  Title String?
  Src   String?
  Index Int

  DataSetId BigInt
  Dataset   Datasets @relation(fields: [DataSetId], references: [Id])
}

model Transactions {
  Id                 BigInt    @id @default(autoincrement()) @db.BigInt
  CreatedAt          DateTime  @default(now())
  UpdatedAt          DateTime? @updatedAt
  OwnerId            BigInt    @db.BigInt
  Owner              User      @relation(fields: [OwnerId], references: [Id])
  DebitAmount        Float     @db.DoublePrecision
  CreditAmount       Float     @db.DoublePrecision
  Reason             Int
  ReasonDescription  String?
  ReferenceDataSetId BigInt?   @db.BigInt
  ReferenceDataSet   Datasets? @relation(fields: [ReferenceDataSetId], references: [Id])
}
